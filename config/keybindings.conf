## ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
## Extended Tmux Key Bindings Configuration
## ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

# ──────────────────────────────────────────────────
# Prefix Key
# ──────────────────────────────────────────────────
set -g prefix C-a
unbind C-b
bind C-a send-prefix

# ──────────────────────────────────────────────────
# Reload Configuration
# ──────────────────────────────────────────────────
unbind r
bind r source-file ~/.config/tmux/tmux.conf \; display "Configs reloaded! ✨"

# ──────────────────────────────────────────────────
# Pane Splitting (Intuitive)
# ──────────────────────────────────────────────────
# Split vertically (\) and horizontally (-)
bind - split-window -v -c "#{pane_current_path}"
bind '\' split-window -h -c "#{pane_current_path}"

# More intuitive split commands (v for vertical, s for horizontal)
bind v split-window -h -c "#{pane_current_path}"
bind s split-window -v -c "#{pane_current_path}"

# ──────────────────────────────────────────────────
# Pane Navigation (Vim-style)
# ──────────────────────────────────────────────────
# Basic vim navigation
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# Smart pane switching with awareness of Vim splits (if using vim-tmux-navigator)
# Requires christoomey/vim-tmux-navigator plugin in Vim/Neovim
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|l?n?vim?x?|fzf)(diff)?$'"
bind -n C-h if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind -n C-j if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind -n C-k if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind -n C-l if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l

# Quick pane cycling
bind -r Tab select-pane -t :.+
bind -r S-Tab select-pane -t :.-

# ──────────────────────────────────────────────────
# Pane Resizing
# ──────────────────────────────────────────────────
# Fine adjustment (2 cells)
bind -r H resize-pane -L 2
bind -r J resize-pane -D 2
bind -r K resize-pane -U 2
bind -r L resize-pane -R 2

# Coarse adjustment (5 cells)
bind -r C-h resize-pane -L 5
bind -r C-j resize-pane -D 5
bind -r C-k resize-pane -U 5
bind -r C-l resize-pane -R 5

# ──────────────────────────────────────────────────
# Pane Management
# ──────────────────────────────────────────────────
# Swap panes
bind > swap-pane -D  # Swap with next pane
bind < swap-pane -U  # Swap with previous pane
bind C-o rotate-window  # Rotate panes in window

# Break pane into new window
bind ! break-pane

# Join pane from window
bind @ command-prompt -p "join pane from:"  "join-pane -s '%%'"
bind '#' command-prompt -p "send pane to:"  "join-pane -t '%%'"

# ──────────────────────────────────────────────────
# Pane Layouts
# ──────────────────────────────────────────────────
# Quick layouts
bind M-1 select-layout even-horizontal
bind M-2 select-layout even-vertical
bind M-3 select-layout main-horizontal
bind M-4 select-layout main-vertical
bind M-5 select-layout tiled

# Spread panes out evenly
bind E select-layout -E
